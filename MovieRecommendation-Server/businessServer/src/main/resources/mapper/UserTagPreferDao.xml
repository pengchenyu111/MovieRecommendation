<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcy.movierecommendation.dao.UserTagPreferDao">

    <resultMap type="com.pcy.movierecommendation.entity.movieTag.UserTagPrefer" id="UserTagPreferMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="tagList" column="tag_list" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserTagPreferMap">
        select
          user_id, tag_list
        from movie_recommendation.user_tag_prefer
        where user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserTagPreferMap">
        select
          user_id, tag_list
        from movie_recommendation.user_tag_prefer
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserTagPreferMap">
        select
        user_id, tag_list
        from movie_recommendation.user_tag_prefer
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="tagList != null and tagList != ''">
                and tag_list = #{tagList}
            </if>
        </where>
    </select>

    <!-- 总数 -->
    <select id="count" resultType="int">
        select count(*) from user_tag_prefer
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId">
        insert into movie_recommendation.user_tag_prefer(user_id, tag_list)
        values (#{userId}, #{tagList})
    </insert>

    <insert id="insertBatch" keyProperty="userId">
        insert into movie_recommendation.user_tag_prefer(user_id, tag_list)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.tagList})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId">
        insert into movie_recommendation.user_tag_prefer(user_id, tag_list)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.tagList})
        </foreach>
        on duplicate key update
        user_id = value(user_id), tag_list = values(tag_list)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update movie_recommendation.user_tag_prefer
        <set>
            <if test="tagList != null and tagList != ''">
                tag_list = #{tagList},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from movie_recommendation.user_tag_prefer where user_id = #{userId}
    </delete>

</mapper>